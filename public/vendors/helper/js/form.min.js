/*reset form on close modal*/

$('.modal').on('hidden.bs.modal', function () { 
    $(this).find('form').trigger('reset');
    $(this).find('form .invalid-feedback').html('');
    $(this).find('.select2').val(null).trigger('change');
    $(this).find('input').removeClass('error');
    $(this).find('[class$="-error"]').html('');
});

//--------------------------------------------------------------------------------------------------
//function for get the form add as return in array format
$.fn.getFormObject = function() {
    var object = $(this).serializeArray().reduce(function(obj, item) {
        var name = item.name.replace("[]", "");
        if (typeof obj[name] !== "undefined") {
            if (!Array.isArray(obj[name]))
                obj[name] = [obj[name], item.value];
            else
                obj[name].push(item.value);
        } else
            obj[name] = item.value;

        return obj;
    }, {});
    return object;
}
//--------------------------------------------------------------------------------------------------
$(document).on('keyup change','input,select,date', function(event) {
    // Get the name attribute of the fieldElement
    var inputValue = $(this).attr('name');

    if(inputValue==undefined)
        return;
    // Remove the 'error' class from elements with the specified name
    $('[name="'+inputValue+'"]').removeClass('error');

    // Reset the content of elements with the specified class
    var inputValue = inputValue.replace(/\[|\]/g, '');
    $('.' + inputValue + '-error').html('');
  });
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
//function for submit the form
$("form").submit(function(e) {
    e.preventDefault();  
    $('a').bind('click', false);
    var form = $(this);
    // var html = $('form button[type=submit]:focus').html();
    // html = $(html).find('.waves-ripple').remove();

    var html = $('button[type=submit]',form).find('.waves-ripple').remove().end().html();

    var action = $(e.currentTarget).attr('action');
    var method = $(e.currentTarget).attr('method');

    $('button[type=submit]',form).html('<span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span><span class="ms-25 align-middle">Wait...</span>');
    $('button[type=submit]',form).prop('disabled',true);

    $("input, select, textarea",form).removeClass("error");
    $("small.error",form).html('');

    var FormArray = new FormData(this);
    FormArray.append('_token', $('meta[name="csrf-token"]').attr('content'));

    // console.log(JSON.stringify(FormArray), action);
    // console.log("------------------");

    // return false;
    $.ajax({
        url: action,
        method: method,
        processData: false, // Important! Prevent jQuery from processing the data
        contentType: false, // Important! Set contentType to false so that FormData is used correctly
        callback: '?',
        crossDomain: true,
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        },
        datatype: 'application/json',
        data: FormArray,
        success: function(data) {
            console.log(data);
            $('small.text-danger').html('');
            if (data?.Status == 200) {
                if (data?.Redirect) {
                    window.location = data?.Redirect;
                }
                toastr.success('ðŸ‘‹Successfully Submited!','Success!', { closeButton: true, tapToDismiss: false });

                $('button[type=submit]',form).html(html);
                $('button[type=submit]',form).prop('disabled', false);
                $('a').unbind('click', false);
            }
            if (data?.Status == 400) {
                for (var key in data?.Data) {
                    if (data?.Data[key]?.length > 0) {
                       
                        var convertedString = key.replace(/\[|\]/g, '');
                        // if(key.match(/\.(\d+)\./))
                        // {
                        //     // Extract the number between dots using regular expression
                        //     var number = key.match(/\.(\d+)\./)[1];
                        //     // Replace the dot notation with square brackets
                        //     var convertedString = key.replace('.' + number + '.', '[' + number + '][');
                        //     convertedString += ']';
                        // }

                        // console.log('data?.Data[key][0] :: ', data?.Data[key][0],convertedString);

                        var selecttor = $('[name="'+key+'"]',form).length>1 ? $('[name="'+key+'"]',form)[0] : $('[name="'+key+'"]',form);
                        $(selecttor).addClass('error');

                        if($('.' + convertedString + '-error',form).length>0)
                        {   
                            $('.' + convertedString + '-error',form).html(data?.Data[key][0].replace('_id', '').replace(/_/g, ' '));
                        }
                        else{
                            $('.' + convertedString + '-error',form).remove();
                            $('<small class="error '+ convertedString +'-error">'+(data?.Data[key][0].replace('_id', '').replace(/_/g, ' '))+'</small>').insertAfter(selecttor);
                        }

                        toastr.error(data?.Data[key][0].replace('_id', '').replace(/_/g, ' ')+'ðŸ‘‹',
                        'Somthing Wrong!', { closeButton: true, tapToDismiss: false });
                        
                    }
                }
                $('button[type=submit]',form).html(html);
                $('button[type=submit]',form).prop('disabled', false);
                $('a').unbind('click', false);
            }
            
        },
        error: function(error) {
            console.log('error :: ', error?.status, error?.statusText)
            if (error.status === 422) {
                // Handle validation errors
                var errors = error.responseJSON.errors;
                for (var key in errors) {
                    if (errors[key]?.length > 0) {
                       
                        var convertedString = key.replace(/\[|\]/g, '');                       

                        var selecttor = $('[name="'+key+'"]',form).length>1 ? $('[name="'+key+'"]',form)[0] : $('[name="'+key+'"]',form);
                        $(selecttor).addClass('error');

                        if($('.' + convertedString + '-error',form).length>0)
                        {   
                            $('.' + convertedString + '-error',form).html(errors[key][0].replace('_id', '').replace(/_/g, ' '));
                        }
                        else{
                            $('.' + convertedString + '-error',form).remove();
                            $('<small class="error '+ convertedString +'-error">'+(errors[key][0].replace('_id', '').replace(/_/g, ' '))+'</small>').insertAfter(selecttor);
                        }
                        toastr.error((errors[key][0].replace('_id', '').replace(/_/g, ' '))+'ðŸ‘‹',
                        'Somthing Wrong!', { closeButton: true, tapToDismiss: false });
                        
                    }
                }
            }
            if(error?.status==419)
            {
                let person = confirm("Page Session is Expired! Reload");
                if (person)
                        location.reload();
            }
            $('button[type=submit]',form).html(html);
            $('button[type=submit]',form).prop('disabled', false);
        }        
    });
    return false;
});



  //phone
  if ($('.account-number-mask').length) {
    $('.account-number-mask').each(function () {
      new Cleave($(this), {
        phone: true,
        phoneRegionCode: 'IN'
      });
    });
  }
//--------------------------------------------------------------------------------------------------